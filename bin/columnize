#!/usr/bin/env python

from sys import stdin,stdout
import sys
import re
import getopt
from os import path

def getlength(s):
    s = re.sub("\x1b\[[0-9;]*m", "", s)
    return len(s.decode("utf8"))

def pad(l, length):
    return l + [0]*(length - len(l))

def usage():
    print """usage: columnize.py [-s sep]"""


if __name__=="__main__":
    try:
        opts,args = getopt.getopt(sys.argv[1:], "ts:")
    except getopt.GetoptError as err:
        print path.basename(sys.argv[0]),": ",
        print str(err)
        usage()
        sys.exit(2)

    splitchar='\t'

    for o,a in opts:
        if o == "-s":
            splitchar = a

    lines = []
    lengths = [0]
    for line in stdin:
        items = line.rstrip().split(splitchar)
        lines.append(items)
        counts = [getlength(i) for i in items]
        # Pad lengths with zeros
        items = max(len(lengths), len(counts))
        counts = pad(counts, items)
        lengths = pad(lengths, items)
        # Find the longest lengths
        lengths = map(max,zip(lengths, counts))

    l = 0
    for line in lines:
        i = 0
        for c in line[:-1]:
            print c, ' '*(lengths[i]-getlength(c)),
            i += 1
        print line[-1]
        l += 1
